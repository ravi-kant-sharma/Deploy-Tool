/*
 * EditPreferencesDialog.java
 *
 * Created on __DATE__, __TIME__
 */

package main.ui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.Set;

import main.util.ProjectProperties;

/**
 *
 * @author  __USER__
 */
public class EditPreferencesDialog extends javax.swing.JDialog {

	/** Creates new form EditPreferencesDialog */
	DeployToolFrame parentFrame;
	Properties prop= null;
	public EditPreferencesDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		parentFrame=(DeployToolFrame)parent;
		this.setSize(new Dimension(300,400));
		this.setLocation(parent.getX(), parent.getY()+40);
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		addBtn = new javax.swing.JButton();
		removeBtn = new javax.swing.JButton();
		editBtn = new javax.swing.JButton();
		projectScrollPane = new javax.swing.JScrollPane();
		
		Properties prop = new Properties();
		try {
			prop.load(new FileInputStream(parentFrame.getDeployToolHome()+"\\config.properties"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		Set<Object> properties= prop.keySet();
		 Object list[] = properties.toArray();
		 projectList = new javax.swing.JList(list);

		setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		jLabel1.setText("Edit Preferences");

		addBtn.setText("Add");
		addBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addBtnActionPerformed(evt);
			}
		});
		
		addBtn.addFocusListener(new java.awt.event.FocusAdapter(){
			public void focusGained(java.awt.event.FocusEvent evt) {
				addBtnFocusGained(evt);
			}
		});

		removeBtn.setText("Remove");
		removeBtn.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e) {
				removeBtnActionPerformed(e);
				
			}
		});
		editBtn.setText("Edit");
		editBtn.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e) {
				editBtnActionPerformed(e);
				
			}
		});

		projectScrollPane.setViewportView(projectList);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE,
						384, Short.MAX_VALUE)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(projectScrollPane,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										266,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(removeBtn)
												.addComponent(editBtn)
												.addComponent(addBtn))
								.addGap(13, 13, 13)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addComponent(jLabel1)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(8, 8, 8)
																.addComponent(
																		addBtn)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		editBtn)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		removeBtn))
												.addComponent(
														projectScrollPane,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														363,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(28, Short.MAX_VALUE)));
		pack();
	}// </editor-fold>
	//GEN-END:initComponents
	
	private void addBtnFocusGained(java.awt.event.FocusEvent evt) {
		refreshList();
	}
	
	private void refreshList(){
		Properties prop = new Properties();
		try {
			prop.load(new FileInputStream(parentFrame.getDeployToolHome()+"\\config.properties"));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		Set<Object> properties= prop.keySet();
		 Object list[] = properties.toArray();
		 projectList.setListData(list);
	}

	private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {
		AddProjectsDialog addProjectsDialog = new AddProjectsDialog(parentFrame,true);
		addProjectsDialog.setVisible(true);
	}
	
	private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {
		Object[] selectedValues = getSelectedList();
		if(selectedValues != null && selectedValues.length >0){
			loadPropertiesFile();
			String value = (String) prop.get(selectedValues[0]);
			ProjectProperties dto = new ProjectProperties();
			dto.setKey((String) selectedValues[0]);
			dto.setValue(value);
			dto.setAction("edit");
			AddProjectsDialog addProjectsDialog = new AddProjectsDialog(parentFrame,true,dto);
			addProjectsDialog.setVisible(true);
		}
	}
	
	private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {
		Object[] selectedValues = getSelectedList();
		
		if(selectedValues != null && selectedValues.length >0){
			FileOutputStream fos = null;
			try {
				fos = new FileOutputStream(parentFrame.getDeployToolHome()+"\\config.properties");
				loadPropertiesFile();
				for(Object selectedValue : selectedValues){
					prop.remove(selectedValue);
				}
				prop.save(fos, "null");
				fos.close();
				refreshList();
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				EditPreferencesDialog dialog = new EditPreferencesDialog(new javax.swing.JFrame(),
						true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
	
	private Object[] getSelectedList(){
		return projectList.getSelectedValues();
	}
	
	private void loadPropertiesFile(){
		try {
			prop = parentFrame.deployUtil.loadPropertiesFile(parentFrame.getDeployToolHome()+"\\config.properties");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton addBtn;
	private javax.swing.JButton removeBtn;
	private javax.swing.JButton editBtn;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JList projectList;
	private javax.swing.JScrollPane projectScrollPane;
	// End of variables declaration//GEN-END:variables
}