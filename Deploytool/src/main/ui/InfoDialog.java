/*
 * InfoDialog.java
 *
 * Created on __DATE__, __TIME__
 */

package main.ui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author  __USER__
 */
public class InfoDialog extends javax.swing.JDialog {

	/** Creates new form InfoDialog */
	public InfoDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		
		initComponents();
	}
	DeployToolFrame parentFrame;
	
	public InfoDialog(JFrame parent, String title, String message) {
	    super(parent, title, true);
	    parentFrame= (DeployToolFrame)parent;
	    Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
	    this.setLocation((int)dimension.getWidth()/5,(int)dimension.getHeight()/5);
	    setDefaultCloseOperation(DISPOSE_ON_CLOSE);
	    
	    JPanel messagePane = new JPanel();
	    messagePane.add(new JLabel(message));
	    getContentPane().add(messagePane);
	    JPanel buttonPane = new JPanel();
	    JButton button = new JButton(); 
	    buttonPane.add(button); 
	    button.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonActionPerformed(evt);
			}
			
		});
	    getContentPane().add(buttonPane, BorderLayout.SOUTH);
	    if(message.contains("Jboss")){
	    	button.setText("Shutdown and start JBOSS Again");
	    }else{
	    	button.setText("Ok");
	    }
	    pack(); 
//	    setVisible(true);
	  }
	  public void actionPerformed(ActionEvent e) {
	    setVisible(false); 
	    dispose(); 
	  }
	  
	  private void buttonActionPerformed(ActionEvent evt) {
//			try {
				this.dispose();
//				File f = new File(parentFrame.getDeployToolHome()+"\\jboss_status.txt");
//				FileInputStream fis = new FileInputStream(f);
//				BufferedReader br = new BufferedReader(new InputStreamReader(fis));
//				String str=br.readLine();
//				String[] strings = str.split("[\\s+]");
//				String pid = strings[strings.length-1];
//				Runtime.getRuntime().exec("cmd /c start taskkill /PID "+pid+" /F");
//				parentFrame.jButton5ActionPerformed(evt);
//			} catch (IOException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
	  }
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 400,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 158,
				Short.MAX_VALUE));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				InfoDialog dialog = new InfoDialog(new javax.swing.JFrame(),
						true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	// End of variables declaration//GEN-END:variables

}